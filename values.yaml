# replicaCount: 1

appName: demo-voting-app

# image:
#   postgres:
#     repository: postgres
#     tag: "9.4"
#     pullPolicy: IfNotPresent
#   redis:
#     repository: redis
#     tag: "latest"
#     pullPolicy: IfNotPresent
#   resultApp:
#     repository: dockersamples/examplevotingapp_result
#     pullPolicy: IfNotPresent
#   votingApp:
#     repository: dockersamples/examplevotingapp_vote
#     pullPolicy: IfNotPresent
#   workerApp:
#     repository: dockersamples/examplevotingapp_worker
#     pullPolicy: IfNotPresent

# service:
#   postgres:
#     type: ClusterIP
#     port: 5432
#   redis:
#     type: ClusterIP
#     port: 6379
#   resultApp:
#     type: NodePort
#     port: 82
#     nodePort: 30002
#   votingApp:
#     type: NodePort
#     port: 81
#     nodePort: 30001

# env:
#   postgres:
#     POSTGRES_USER: "postgres"
#     POSTGRES_PASSWORD: "postgres"
#     POSTGRES_HOST_AUTH_METHOD: "trust"

# podAnnotations: {}
# podLabels: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []



# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80


# # Additional volumes on the output Deployment definition.
# volumes: []
# # - name: foo
# #   secret:
# #     secretName: mysecret
# #     optional: false

# # Additional volumeMounts on the output Deployment definition.
# volumeMounts: []
# # - name: foo
# #   mountPath: "/etc/foo"
# #   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# workerApp:
#   replicas: 1
#   image:
#     repository: dockersamples/examplevotingapp_worker
#     pullPolicy: IfNotPresent
#   resources: {}

appName: demo-voting-app

postgres:
  replicas: 1
  image: postgres:9.4
  user: "postgres"
  password: "postgres"
  authMethod: trust

redis:
  replicas: 1
  image: redis:latest

resultApp:
  replicas: 1
  image: dockersamples/examplevotingapp_result

votingApp:
  replicas: 1
  image: dockersamples/examplevotingapp_vote

workerApp:
  replicas: 1
  image: dockersamples/examplevotingapp_worker


service:
  type: ClusterIP
  port: 80
